# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/

[build-system]
requires = ["poetry>=1.0"]
build-backend = "poetry.masonry.api"

[tool.poetry]
name = "plinkliftover"
version = "0.3.0"
description = "Converts genotype data stored in plink's PED+MAP format from one genome build to another, using liftOver"
readme = "README.md"
authors = [
  "Miles Smith <miles-smith@omrf.org>"
]
license = "GNU GPL v3.0"
repository = "https://github.com/milescsmith/plinkliftover"
homepage = "https://github.com/milescsmith/plinkliftover"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = []  # Update me

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [  # Update me
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.scripts]
# Entry points for the package https://python-poetry.org/docs/pyproject/#scripts
"plinkliftover" = "plinkliftover.__main__:app"
"map2bed"= "plinkliftover.map2bed:map2bedapp"
"bed2map"= "plinkliftover.bed2map:bed2mapapp"

[tool.poetry.dependencies]
python = ">=3.8.3,<4.0"
typer = "^0.4.0"
rich = "^10.2.1"
psutil = "^5.8.0"

[tool.poetry.dev-dependencies]
darglint = "^1.5.8"
isort = "^5.7.0"
pyupgrade = "^2.17"
black = "^21.12b0"
mypy = "0.921"
bandit = "^1.7.0"
safety = "^1.10.3"
pytest = "^6.2"
pylint = "^2.8.2"
pydocstyle = "^6.1.1"
pre-commit = "^2.12.1"
flakehell = "^0.9.0"
flake8-broken-line = "^0.3.0"
flake8-bugbear = "^21.4"
flake8-builtins = "^1.5.3"
flake8-comprehensions = "^3.5.0"
flake8-eradicate = "^1.0.0"
flake8-isort = "^4.0.0"
pycodestyle = "^2.6.0"
pyflakes = "^2.2.0"

[tool.black]
# https://github.com/psf/black
line-length = 80
target-version = ["py38"]

[tool.isort]
# https://github.com/timothycrosley/isort/
known_typing = "typing,types,typing_extensions,mypy,mypy_extensions"
sections = "FUTURE,TYPING,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
include_trailing_comma = true
default_section = "FIRSTPARTY"
multi_line_output = 3
indent = 4
force_grid_wrap = 0
use_parentheses = true
line_length = 80


[tool.flakehell]
# optionally inherit from remote config (or local if you want)
base = "https://raw.githubusercontent.com/life4/flakehell/master/pyproject.toml"
# specify any flake8 options. For example, exclude "example.py":
exclude = ["example.py"]
# make output nice
# format = "grouped"
# 80 chars aren't enough in 21 century
max_line_length = 90
# show line of source code in output
show_source = true

[tool.flakehell.plugins]
flake8-bandit = ["+*"]
flake8-bugbear = ["-B950"]
flake8-builtins = ["+*"]
pylint = ["+*", "-C0103", "-C0116", "-C901", "-E203", "-E401", "-E501", "-E266", "-F401", "-F403", "-R0913", "-R0914", "-W503", "-W1203", "-W1309"]
# wemake-python-styleguide = ["+*", "-WPS305", "-WPS221", "-WPS111", "-WPS231", "-WPS326", "-WPS337", "-WPS336", "-WPS528", "-WPS529"]
flake8-broken-line = ["+*"]
flake8-commas = ["+*"]
flake8-comprehensions = ["+*"]
# flake8-darglint = ["+*", "-DAR101"]
flake8-debugger = ["+*"]
# flake8-docstrings = ["+*"]
flake8-eradicate = ["+*", "-E800"]
flake8-isort = ["+*"]
# flake8-rst-docstrings = ["+*"]
# flake8-string-format = ["+*"]
# mccabe = ["+*"]
# pep8-naming = ["+*"]
pycodestyle = ["+*","-E203", "-E401", "-E501", "-E266", "-W503", "-W1203", "-W1309"]
pyflakes = ["+*"]

# match by prefix
[tool.flakehell.exceptions."tests/"]
pycodestyle = ["-*"]     # disable a check
pyflakes = ["-*"]           # disable a plugin

[tool.flakehell.exceptions."tests/test_example.py"]
pyflakes = ["+*"]           # enable a plugin

# match by glob
[tool.flakehell.exceptions."**/test_*.py"]
pyflakes = ["-*"]
